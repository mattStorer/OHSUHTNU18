{
  "resourceType": "Library",
  "id": "ohsuhtn-stu3-pre-hypertension",
  "meta": {
    "versionId": "1",
    "lastUpdated": "2020-02-10T11:00:00.000-08:00"
  },
  "url": "https://github.com/mattStorer/OHSUHTNU18/blob/develop/docs/FHIR%20artifacts/Library_ohsuhtn-stu3-pre-hypertension-0.1.0.json",
  "version": "0.1.0",
  "name": "OHSUHTN_STU3_Pre_Hypertension",
  "title": "Library - OHSU Test Logic for identifying pre-hypertension",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/library-type",
        "code": "logic-library",
        "display": "Logic Library"
      }
    ]
  },
  "date": "2020-02-04T00:00:00-08:00",
  "publisher": "Oregon Health and Science University (OHSU)",
  "description": "Identifies pre-hypertension",
  "purpose": "The purpose of this is to act as a 'hello world' sort of simple logic for testing end-to-end processing of the system.",
  "usage": "This is to be used in conjunction with a patient-facing FHIR application.",
  "useContext": [
    {
      "code": {
        "system": "http://hl7.org/fhir/usage-context-type",
        "code": "focus",
        "display": "Clinical Focus"
      },
      "valueCodeableConcept": {
        "coding": [
          {
            "system": "http://snomed.info/sct",
            "code": "371622005",
            "display": "Elevated BP without HTN diagnosis"
          }
        ]
      }
    }
  ],
  "jurisdiction": [
    {
      "coding": [
        {
          "system": "urn:iso:std:iso:3166",
          "code": "US",
          "display": "United States of America"
        }
      ]
    }
  ],
  "topic": [
    {
      "text": "Hypertension Management"
    }
  ],
  "contributor": [
    {
      "type": "author",
      "name": "Matthew Storer"
    }
  ],
  "copyright": "Â© OHSU 2020+.",
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/fhir-helpers"
      }
    },
    {
      "type": "depends-on",
      "url": "http://hl7.org/fhir|3.0.0"
    }
  ],
  "dataRequirement": [
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "Blood Pressure Measured"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBPSFNVSFROX1NUVTNfUHJlX0h5cGVydGVuc2lvbiB2ZXJzaW9uICcwLjEuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnMy4wLjAnICAvKiBTVFUzICovCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgRkhJUkhlbHBlcnMKCmNvZGVzeXN0ZW0gIkxPSU5DIjogJ2h0dHA6L2xvaW5jLm9yZycKCnZhbHVlc2V0ICJCbG9vZCBQcmVzc3VyZSBNZWFzdXJlZCI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy42MDAuMjAxMicKCmNvZGUgIkJsb29kIFByZXNzdXJlIjogJzU1Mjg0LTQnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdibG9vZCBwcmVzc3VyZScKY29kZSAiU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUiOiAnODQ4MC02JyBmcm9tICJMT0lOQyIgZGlzcGxheSAnU3lzdG9saWMgYmxvb2QgcHJlc3N1cmUnCmNvZGUgIkRpYXN0b2xpYyBCbG9vZCBQcmVzc3VyZSI6ICc4NDYyLTQnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdEaWFzdG9saWMgYmxvb2QgcHJlc3N1cmUnCgovLyB0b2RvOiBpbXBsZW1lbnQgcGFyYW1ldGVycyB3aGVuIHdlIGZpZ3VyZSBvdXQgaG93IHRvIGdldCB0aGVtIHRvIHdvcmsuICBCcnluIGhhcyBwcm92aWRlZCBpbmZvIGJ1dCBpdCdzIGNvbnZvbHV0ZWQKLy8gcGFyYW1ldGVyIE1lYXN1cmVtZW50UGVyaW9kIEludGVydmFsPERhdGVUaW1lPgoKY29udGV4dCBQYXRpZW50CgovLyB0b2RvOiByZW1vdmUgdGhpcyBoYXJkLWNvZGVkIE1lYXN1cmVtZW50UGVyaW9kIGRlZmluaXRpb24gd2hlbiB0aGUgcGFyYW1ldGVyaXplZCB2ZXJzaW9uIGlzIHdvcmtpbmcKZGVmaW5lICJNZWFzdXJlbWVudFBlcmlvZCI6CiAgSW50ZXJ2YWxbQDIwMTktMDEtMDFUMDA6MDA6MDAuMCwgQDIwMTktMDYtMjlUMjM6NTk6NTkuMF0KCmRlZmluZSAiSW5jbHVzaW9uIENyaXRlcmlhIjoKICBBZ2VJblllYXJzQXQoc3RhcnQgb2YgIk1lYXN1cmVtZW50UGVyaW9kIikgPj0gMTgKCmRlZmluZSAiSXMgRWxpZ2libGUgRGV0YWlsIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgdGhlbiAnV2lsbCBwcm9jZXNzICcgKyBGaXJzdChQYXRpZW50Lm5hbWUpLnRleHQgKwogICAgICAnOiBCb3JuICcgKyBUb1N0cmluZyhQYXRpZW50LmJpcnRoRGF0ZSkgKwogICAgICAnIChBZ2UgYXQgc3RhcnQgb2YgbWVhc3VyZW1lbnQgcGVyaW9kOiAnICsgVG9TdHJpbmcoQWdlSW5ZZWFyc0F0KHN0YXJ0IG9mICJNZWFzdXJlbWVudFBlcmlvZCIpKSArCiAgICAgICcpLCBHZW5kZXI6ICcgKyBQYXRpZW50LmdlbmRlciArICcsICcgKwogICAgICBUb1N0cmluZyhDb3VudCgiQmxvb2QgUHJlc3N1cmUgT2JzZXJ2YXRpb25zIikpICsgJyBCUCBvYnNlcnZhdGlvbnMnCiAgZWxzZSBudWxsCgpkZWZpbmUgIklzIEVsaWdpYmxlIFN1bW1hcnkiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiCiAgICB0aGVuICdQYXRpZW50cyBpcyBFbGlnaWJsZScKICBlbHNlIG51bGwKCmRlZmluZSAiSXMgRWxpZ2libGUgSW5kaWNhdG9yIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgdGhlbiAnaW5mbycKICBlbHNlIG51bGwKCmRlZmluZSAiSHlwZXJ0ZW5zaW9uIERldGFpbCI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIgYW5kICJIYXMgSHlwZXJ0ZW5zaW9uIgogICAgdGhlbiAnUGF0aWVudHMgaGFzIGh5cGVydGVuc2lvbiBiYXNlZCBvbiBhdmVyYWdlIGJsb29kIHByZXNzdXJlJwogIGVsc2UgbnVsbAoKZGVmaW5lICJIeXBlcnRlbnNpb24gU3VtbWFyeSI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIgYW5kICJIYXMgSHlwZXJ0ZW5zaW9uIgogICAgdGhlbiAnQXZlcmFnZSBzeXN0b2xpYyBCUDogJyArIFRvU3RyaW5nKCJUZXN0IEF2ZXJhZ2UgU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUiKQogIGVsc2UgbnVsbAoKZGVmaW5lICJIeXBlcnRlbnNpb24gSW5kaWNhdG9yIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgdGhlbiAnd2FybmluZycKICBlbHNlIG51bGwKCmRlZmluZSAiSGFzIEh5cGVydGVuc2lvbiI6CiAgdHJ1ZQovLyAgIkh5cGVydGVuc2lvbiBCbG9vZCBQcmVzc3VyZSIgaXMgbm90IG51bGwKCmRlZmluZSAiSHlwZXJ0ZW5zaW9uIEJsb29kIFByZXNzdXJlIjoKICAiQXZlcmFnZSBCbG9vZCBQcmVzc3VyZSIgTwogICAgd2hlcmUgTy5TeXN0b2xpYyA+IDEzMAogICAgYW5kIE8uRGlhc3RvbGljID4gOTAKCmRlZmluZSAiUHJlLUh5cGVydGVuc2lvbiBEZXRhaWwiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiIGFuZCAiSXMgUHJlLUh5cGVydGVuc2l2ZSIKICAgIHRoZW4gJ1BhdGllbnRzIGhhcyBwcmUtaHlwZXJ0ZW5zaW9uIGJhc2VkIG9uIGF2ZXJhZ2UgYmxvb2QgcHJlc3N1cmUnCiAgZWxzZSBudWxsCgpkZWZpbmUgIlByZS1IeXBlcnRlbnNpb24gU3VtbWFyeSI6CiAgaWYgIkluY2x1c2lvbiBDcml0ZXJpYSIgYW5kICJJcyBQcmUtSHlwZXJ0ZW5zaXZlIgogICAgdGhlbiAnUHJlLUh5cGVydGVuc2l2ZScKICBlbHNlIG51bGwKCmRlZmluZSAiUHJlLUh5cGVydGVuc2lvbiBJbmRpY2F0b3IiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiCiAgICB0aGVuICd3YXJuaW5nJwogIGVsc2UgbnVsbAoKZGVmaW5lICJJcyBQcmUtSHlwZXJ0ZW5zaXZlIjoKICAiUHJlLUh5cGVydGVuc2l2ZSBCbG9vZCBQcmVzc3VyZSIgaXMgbm90IG51bGwKCmRlZmluZSAiUHJlLUh5cGVydGVuc2l2ZSBCbG9vZCBQcmVzc3VyZSI6CiAgIkF2ZXJhZ2UgQmxvb2QgUHJlc3N1cmUiIE8KICAgIHdoZXJlIE8uU3lzdG9saWMgYmV0d2VlbiAxMjAgYW5kIDEzMAogICAgYW5kIE8uRGlhc3RvbGljIGJldHdlZW4gODAgYW5kIDkwCgpkZWZpbmUgIk5vcm1hbCBEZXRhaWwiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiIGFuZCAiSXMgTm9ybWFsIgogICAgdGhlbiAnUGF0aWVudHMgaGFzIG5vcm1hbCBibG9vZCBwcmVzc3VyZScKICBlbHNlIG51bGwKCmRlZmluZSAiTm9ybWFsIFN1bW1hcnkiOgogIGlmICJJbmNsdXNpb24gQ3JpdGVyaWEiIGFuZCAiSXMgTm9ybWFsIgogICAgdGhlbiAnTm9ybWFsJwogIGVsc2UgbnVsbAoKZGVmaW5lICJOb3JtYWwgSW5kaWNhdG9yIjoKICBpZiAiSW5jbHVzaW9uIENyaXRlcmlhIgogICAgdGhlbiAnaW5mbycKICBlbHNlIG51bGwKCmRlZmluZSAiSXMgTm9ybWFsIjoKICAiTm9ybWFsIEJsb29kIFByZXNzdXJlIiBpcyBub3QgbnVsbAoKZGVmaW5lICJOb3JtYWwgQmxvb2QgUHJlc3N1cmUiOgogICJBdmVyYWdlIEJsb29kIFByZXNzdXJlIiBPCiAgICB3aGVyZSBPLlN5c3RvbGljIDwgMTIwCiAgICBhbmQgTy5EaWFzdG9saWMgPCA4MAoKZGVmaW5lICJBdmVyYWdlIEJsb29kIFByZXNzdXJlIjoKICBUdXBsZSB7IFN5c3RvbGljOiAiQXZlcmFnZSBTeXN0b2xpYyBCbG9vZCBQcmVzc3VyZSIsIERpYXN0b2xpYzogIkF2ZXJhZ2UgRGlhc3RvbGljIEJsb29kIFByZXNzdXJlIiB9CgpkZWZpbmUgIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9ucyI6CiAgW09ic2VydmF0aW9uOiAiQmxvb2QgUHJlc3N1cmUiXSBPCiAgICB3aGVyZSAiTm9ybWFsaXplIEludGVydmFsIihPLmVmZmVjdGl2ZSkgZHVyaW5nICJNZWFzdXJlbWVudFBlcmlvZCIKICAgICAgYW5kIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnIH0KCmRlZmluZSAiVGVzdCBBdmVyYWdlIFN5c3RvbGljIEJsb29kIFByZXNzdXJlIjoKICBBdmcoezEyMCwgMTMwLCAxNDB9KQoKZGVmaW5lICJBdmVyYWdlIFN5c3RvbGljIEJsb29kIFByZXNzdXJlIjoKICBBdmcoIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9ucyIgTwogICAgcmV0dXJuIEZISVJIZWxwZXJzLlRvUXVhbnRpdHkoc2luZ2xldG9uIGZyb20gKE8uY29tcG9uZW50IEMgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KEMuY29kZSkgfiAiU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUiKS52YWx1ZSkKICApCgpkZWZpbmUgIkF2ZXJhZ2UgRGlhc3RvbGljIEJsb29kIFByZXNzdXJlIjoKICBBdmcoIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9ucyIgTwogICAgcmV0dXJuIEZISVJIZWxwZXJzLlRvUXVhbnRpdHkoc2luZ2xldG9uIGZyb20gKE8uY29tcG9uZW50IEMgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KEMuY29kZSkgfiAiRGlhc3RvbGljIEJsb29kIFByZXNzdXJlIikudmFsdWUpCiAgKQoKZGVmaW5lIGZ1bmN0aW9uICJOb3JtYWxpemUgSW50ZXJ2YWwiKGNob2ljZSBDaG9pY2U8RkhJUi5kYXRlVGltZSwgRkhJUi5QZXJpb2QsIEZISVIuVGltaW5nLCBGSElSLmluc3RhbnQsIEZISVIuc3RyaW5nLCBGSElSLkFnZSwgRkhJUi5SYW5nZT4pOgogIGNhc2UKCSAgd2hlbiBjaG9pY2UgaXMgRkhJUi5kYXRlVGltZSB0aGVuCiAgICAJSW50ZXJ2YWxbRkhJUkhlbHBlcnMuVG9EYXRlVGltZShjaG9pY2UgYXMgRkhJUi5kYXRlVGltZSksIEZISVJIZWxwZXJzLlRvRGF0ZVRpbWUoY2hvaWNlIGFzIEZISVIuZGF0ZVRpbWUpXQoJCXdoZW4gY2hvaWNlIGlzIEZISVIuUGVyaW9kIHRoZW4KICAJCUZISVJIZWxwZXJzLlRvSW50ZXJ2YWwoY2hvaWNlIGFzIEZISVIuUGVyaW9kKQoJCXdoZW4gY2hvaWNlIGlzIEZISVIuaW5zdGFudCB0aGVuCgkJCUludGVydmFsW0ZISVJIZWxwZXJzLlRvRGF0ZVRpbWUoY2hvaWNlIGFzIEZISVIuaW5zdGFudCksIEZISVJIZWxwZXJzLlRvRGF0ZVRpbWUoY2hvaWNlIGFzIEZISVIuaW5zdGFudCldCgkJd2hlbiBjaG9pY2UgaXMgRkhJUi5BZ2UgdGhlbgoJCSAgSW50ZXJ2YWxbRkhJUkhlbHBlcnMuVG9EYXRlKFBhdGllbnQuYmlydGhEYXRlKSArIEZISVJIZWxwZXJzLlRvUXVhbnRpdHkoY2hvaWNlIGFzIEZISVIuQWdlKSwKCQkJICBGSElSSGVscGVycy5Ub0RhdGUoUGF0aWVudC5iaXJ0aERhdGUpICsgRkhJUkhlbHBlcnMuVG9RdWFudGl0eShjaG9pY2UgYXMgRkhJUi5BZ2UpICsgMSB5ZWFyKQoJCXdoZW4gY2hvaWNlIGlzIEZISVIuUmFuZ2UgdGhlbgoJCSAgSW50ZXJ2YWxbRkhJUkhlbHBlcnMuVG9EYXRlKFBhdGllbnQuYmlydGhEYXRlKSArIEZISVJIZWxwZXJzLlRvUXVhbnRpdHkoKGNob2ljZSBhcyBGSElSLlJhbmdlKS5sb3cpLAoJCQkgIEZISVJIZWxwZXJzLlRvRGF0ZShQYXRpZW50LmJpcnRoRGF0ZSkgKyBGSElSSGVscGVycy5Ub1F1YW50aXR5KChjaG9pY2UgYXMgRkhJUi5SYW5nZSkuaGlnaCkgKyAxIHllYXIpCgkJd2hlbiBjaG9pY2UgaXMgRkhJUi5UaW1pbmcgdGhlbgoJCSAgTWVzc2FnZShudWxsIGFzIEludGVydmFsPERhdGVUaW1lPiwgdHJ1ZSwgJzEnLCAnRXJyb3InLCAnQ2Fubm90IGNvbXB1dGUgYSBzaW5nbGUgaW50ZXJ2YWwgZnJvbSBhIFRpbWluZyB0eXBlJykKICAgIHdoZW4gY2hvaWNlIGlzIEZISVIuc3RyaW5nIHRoZW4KICAgICAgTWVzc2FnZShudWxsIGFzIEludGVydmFsPERhdGVUaW1lPiwgdHJ1ZSwgJzEnLCAnRXJyb3InLCAnQ2Fubm90IGNvbXB1dGUgYW4gaW50ZXJ2YWwgZnJvbSBhIFN0cmluZyB2YWx1ZScpCgkJZWxzZQoJCQludWxsIGFzIEludGVydmFsPERhdGVUaW1lPgoJZW5kCg=="
    }
  ]
}